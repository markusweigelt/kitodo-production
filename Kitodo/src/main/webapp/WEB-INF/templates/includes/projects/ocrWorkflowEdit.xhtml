<!--
 *
 * (c) Kitodo. Key to digital objects e. V. <contact@kitodo.org>
 *
 * This file is part of the Kitodo project.
 *
 * It is licensed under GNU General Public License version 3 or later.
 *
 * For the full copyright and license information, please read the
 * GPL3-License.txt file that was distributed with this source code.
 *
-->

<ui:composition
        template="/WEB-INF/templates/baseEditView.xhtml"
        xmlns:h="http://xmlns.jcp.org/jsf/html"
        xmlns:f="http://xmlns.jcp.org/jsf/core"
        xmlns:ui="http://xmlns.jcp.org/jsf/facelets"
        xmlns:p="http://primefaces.org/ui">

    <!--@elvariable id="id" type="java.lang.Integer"-->
    <f:metadata>
        <f:viewParam name="id"/>
        <f:viewAction action="#{OCRWorkflowEditView.load(id)}"/>
    </f:metadata>

    <!--@elvariable id="isEditMode" type="boolean"-->
    <ui:param name="isEditMode"
              value="#{OCRWorkflowEditView.ocrWorkflow.id ne null and SecurityAccessController.hasAuthorityToEditOCRWorkflow()}"/>
    <!--@elvariable id="isCreateMode" type="boolean"-->
    <ui:param name="isCreateMode"
              value="#{OCRWorkflowEditView.ocrWorkflow.id eq null and SecurityAccessController.hasAuthorityToAddOCRWorkflow()}"/>
    <!--@elvariable id="isViewMode" type="boolean"-->
    <ui:param name="isViewMode"
              value="#{not isEditMode and not isCreateMode and SecurityAccessController.hasAuthorityToViewOCRWorkflow()}"/>

    <ui:define name="contentHeader">
        <h:outputScript name="js/save.js" target="body" />
        <script>
            window.onload = function () {checkForm('editForm')};
        </script>
        <h3 id="headerText">
            <h:outputText value="#{msgs['importConfig.mode.create']}" rendered="#{isCreateMode}"/>
            <h:outputText value="#{msgs['importConfig.mode.edit']} (#{importConfigurationEditView.importConfiguration.title})" rendered="#{isEditMode}"/>
            <h:outputText value="#{msgs['importConfig.mode.view']} (#{importConfigurationEditView.importConfiguration.title})" rendered="#{isViewMode}"/>
        </h3>

        <p:commandButton id="save"
                         value="#{msgs.save}"
                         action="#{OCRWorkflowEditView.save}"
                         icon="fa fa-floppy-o fa-lg"
                         iconPos="right"
                         rendered="#{isEditMode || isCreateMode}"
                         disabled="#{OCRWorkflowEditView.saveDisabled}"
                         onclick="setConfirmUnload(false);"
                         onsuccess="PF('notifications').renderMessage({
                            'summary':'#{msgs.configurationSaving}',
                            'detail':'#{msgs.youWillBeRedirected}',
                            'severity':'info'});"/>
        <p:commandButton id="saveButtonToggler"
                         actionListener="#{OCRWorkflowEditView.setSaveDisabled(false)}"
                         update="save"
                         style="display:none;"/>
        <p:button id="cancel" value="#{msgs.cancel}"
                  onclick="setConfirmUnload(false);"
                  outcome="projects?keepPagination=true"
                  icon="fa fa-times fa-lg" iconPos="right"
                  styleClass="secondary"/>
    </ui:define>

    <ui:define name="pageTabView">
        <p:tabView id="importConfigurationTabView">
            <p:tab id="detailsTab" title="#{msgs.details}">
                <p:panelGrid id="importConfiguration-grid" columns="2" layout="grid">
                    <p:row>
                        <div>
                            <p:outputLabel for="title" value="#{msgs.title} *"/>
                            <p:inputText id="title" styleClass="input-with-button input"
                                         value="#{importConfigurationEditView.importConfiguration.title}"
                                         placeholder="#{msgs.title}" disabled="#{isViewMode}"
                                         required="#{not empty param['editForm:save']}"/>
                            <p:commandButton id="titleHelp" type="button"
                                             styleClass="help-button" icon="fa fa-lg fa-question-circle-o"/>
                            <p:tooltip for="titleHelp"
                                       value="Title of this OPAC configuration"/>
                        </div>
                        <div>
                            <p:outputLabel for="description" value="#{msgs['importConfig.field.description']}"/>
                            <p:inputText id="description" styleClass="input-with-button"
                                         value="#{importConfigurationEditView.importConfiguration.description}"
                                         placeholder="#{msgs['importConfig.field.description']}" disabled="#{isViewMode}"/>
                            <p:commandButton id="descriptionHelp" type="button"
                                             styleClass="help-button" icon="fa fa-lg fa-question-circle-o"/>
                            <p:tooltip for="descriptionHelp"
                                       value="Description of this OPAC configuration"/>
                        </div>
                    </p:row>
                    <p:row>
                        <div>
                            <p:outputLabel for="configurationType" value="#{msgs['importConfig.field.configurationType']} *"/>
                            <p:selectOneMenu id="configurationType" styleClass="input-with-button"
                                             required="#{not empty param['editForm:save']}"
                                             value="#{importConfigurationEditView.importConfiguration.configurationType}">
                                <f:selectItem itemValue="#{null}"
                                              itemLabel="-- #{msgs['importConfig.selectConfigurationType']} --"
                                              noSelectionOption="true"/>
                                <f:selectItems value="#{importConfigurationEditView.importConfigurationTypes}"
                                               var="configType"
                                               itemValue="#{configType}"
                                               itemLabel="#{msgs[configType.messageKey]}"/>
                                <p:ajax event="change"
                                        update="editForm:importConfigurationTabView"
                                        oncomplete="toggleSave()"/>
                            </p:selectOneMenu>
                            <p:commandButton id="configurationTypeHelp" type="button"
                                             styleClass="help-button" icon="fa fa-lg fa-question-circle-o"/>
                            <p:tooltip for="configurationTypeHelp"
                                       value="Import configuration type"/>
                        </div>
                    </p:row>
                </p:panelGrid>

            </p:tab>

            <p:tab id="mappingFilesTab"
                   title="#{msgs['mappingFile.files']}"
                   disabled="#{importConfigurationEditView.importConfiguration.configurationType ne 'FILE_UPLOAD'
                           and importConfigurationEditView.importConfiguration.configurationType ne 'OPAC_SEARCH'}">
                <p:panelGrid columns="1"
                             layout="grid"
                             id="mappingFiles">
                    <p:row>
                        <div>
                            <!--@elvariable id="mappingfile" type="org.kitodo.data.database.beans.MappingFile"-->
                            <p:pickList id="mappingFilesPicklist"
                                        showSourceFilter="true"
                                        showTargetFilter="true"
                                        filterMatchMode="contains"
                                        responsive="true"
                                        validator="MappingValidator"
                                        disabled="#{isViewMode}"
                                        converter="#{mappingFileConverter}"
                                        value="#{importConfigurationEditView.availableMappingFiles}"
                                        var="mappingfile"
                                        itemLabel="#{mappingfile.title} (#{mappingfile.inputMetadataFormat} &#8594; #{mappingfile.outputMetadataFormat})"
                                        itemValue="#{mappingfile}"
                                        onTransfer="toggleSave()">
                                <f:facet name="sourceCaption">#{msgs.available}</f:facet>
                                <f:facet name="targetCaption">#{msgs.assigned}</f:facet>
                            </p:pickList>
                        </div>
                    </p:row>
                </p:panelGrid>
            </p:tab>
        </p:tabView>
    </ui:define>

</ui:composition>